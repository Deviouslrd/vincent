name: Snapshot Builds
on: 
  push:
    branches:
      - main

jobs:
  build-snapshot:
    strategy:
      fail-fast: false
      matrix:
        # using oldest available version of ubuntu for compatibility reasons
        # see: https://tauri.app/v1/guides/building/linux
        os: [windows-latest, ubuntu-20.04]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Revision Hash
        shell: bash
        run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Install Tauri Dependencies (Linux)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Set Up Node.JS Environment
        uses: actions/setup-node@master
        with:
          node-version: 20
      
      - name: Set Up PNPM
        uses: pnpm/action-setup@v3
        with:
          version: ^9.4.0
          run_install: false

      - name: Get PNPM Store Directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup PNPM Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies from NPM
        run: pnpm i

      - name: Compile Application
        run: pnpm tauri build
      
      - name: Upload .msi Snapshot (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: SNAPSHOT-${{ env.SHA_SHORT }}-vincent-windows-x64
          path: src-tauri/target/release/bundle/msi
      
      - name: Upload .AppImage Snapshot (Linux)
        if: matrix.os == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: SNAPSHOT-${{ env.SHA_SHORT }}-vincent-linux-appimage-x64
          path: src-tauri/target/release/bundle/appimage
      
      - name: Upload .deb Snapshot (Linux)
        if: matrix.os == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: SNAPSHOT-${{ env.SHA_SHORT }}-vincent-linux-deb-x64
          path: src-tauri/target/release/bundle/deb